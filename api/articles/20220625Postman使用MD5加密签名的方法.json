{"title":"Postman使用MD5加密签名的方法","slug":"20220625Postman使用MD5加密签名的方法","date":"2022-06-25T14:20:48.000Z","updated":"2022-10-29T06:57:20.202Z","comments":true,"path":"api/articles/20220625Postman使用MD5加密签名的方法.json","excerpt":"软件介绍Postman是用户在开发、调试网络程序或者是网页时候来跟踪网络请求的，可以发送几乎所有类型的HTTP请求！Postman在发送网络HTTP请求方面可以说是网络调试类产品中的代表产品。 [Figure] ","covers":["https://s2.loli.net/2022/06/25/wWTZlNDQ5ykGheV.jpg","https://s2.loli.net/2022/06/25/nB9QCyi6WmgeRxk.png","https://s2.loli.net/2022/06/25/9zUwdeso5XP4axl.png","https://s2.loli.net/2022/06/23/bYdtKDC2U5J7iWr.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"软件介绍\"><a href=\"#软件介绍\" class=\"headerlink\" title=\"软件介绍\"></a>软件介绍</h2><p>Postman是用户在开发、调试网络程序或者是网页时候来跟踪网络请求的，可以发送几乎所有类型的HTTP请求！Postman在发送网络HTTP请求方面可以说是网络调试类产品中的代表产品。</p>\n<img src=\"https://s2.loli.net/2022/06/25/wWTZlNDQ5ykGheV.jpg\" alt=\"image001\" style=\"zoom:80%;\" />\n\n<h2 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h2><p>Postman适用于不同的操作系统， Windows X32、Windows X64、Linux和Mac系统。</p>\n<h2 id=\"常用功能\"><a href=\"#常用功能\" class=\"headerlink\" title=\"常用功能\"></a>常用功能</h2><p>1、Postman请求方式包含get、post、put等常用方式；</p>\n<p>2、请求格式包含form-data、raw、binary等常用格式；</p>\n<p>3、collection是类似文件夹，可以把相关项目的请求放在一起方便管理和测试；</p>\n<p>4、Pre-request Script，主要用于编写数据发送前的自定义脚本，实现数据的自动化签名或设置，此功能为本篇文章的主要说明内容；</p>\n<p>5、其它常用功能如设置环境变量、暗黑模式、导出文档等就不一一介绍了；</p>\n<h2 id=\"MD5加密签名\"><a href=\"#MD5加密签名\" class=\"headerlink\" title=\"MD5加密签名\"></a>MD5加密签名</h2><p>Pre-request Script选项卡，主要用于编写数据发送前的自定义脚本，通过一下示例来说明一下。</p>\n<h3 id=\"签名示例一：\"><a href=\"#签名示例一：\" class=\"headerlink\" title=\"签名示例一：\"></a>签名示例一：</h3><p>Body选项卡：</p>\n<img src=\"https://s2.loli.net/2022/06/25/nB9QCyi6WmgeRxk.png\" alt=\"image002\" style=\"zoom:80%;\" />\n\n<p>Pre-request Script选项卡：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var params = request.data; </span><br><span class=\"line\"></span><br><span class=\"line\">var signKey = &quot;415233197335409695&quot;; </span><br><span class=\"line\"></span><br><span class=\"line\">var md5String = params.cmd +</span><br><span class=\"line\"></span><br><span class=\"line\">    params.account +</span><br><span class=\"line\"></span><br><span class=\"line\">    params.nonce +</span><br><span class=\"line\"></span><br><span class=\"line\">    params.client +</span><br><span class=\"line\"></span><br><span class=\"line\">    params.timestamp +</span><br><span class=\"line\"></span><br><span class=\"line\">    params.data +</span><br><span class=\"line\"></span><br><span class=\"line\">    signKey; </span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&quot;md5String----&gt;&quot; + md5String); </span><br><span class=\"line\"></span><br><span class=\"line\">var md5 = CryptoJS.MD5(md5String).toString(); </span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&quot;md5 digest----&gt;&quot; + md5); </span><br><span class=\"line\"></span><br><span class=\"line\">pm.environment.set(&quot;apising&quot;, md5);</span><br></pre></td></tr></table></figure>\n\n<p> 1、声明可以从postman的body选项卡中获取参数，无需在单独声明，当body选项卡中的参数改变时脚本中数据会自动更新；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var params = request.data;</span><br></pre></td></tr></table></figure>\n\n<p>2、声明签名密钥，由于数据中是不包含密钥信息的，所以需要单独声明；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var signKey = &quot;415233197335409695&quot;;</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<p>3、var md5String声明了需要签名的信息包含哪些参数以及信息方式和顺序；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5String = params.cmd +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.account +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.nonce +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.client +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.timestamp +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.data +</span><br><span class=\"line\"></span><br><span class=\"line\">  signKey;</span><br></pre></td></tr></table></figure>\n\n<p>4、定义了输出的信息以及完整的日志，方便分析数据和调试；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5String----&gt;&quot; + md5String);</span><br></pre></td></tr></table></figure>\n\n<p>5、声明了md5信息并转换为字符串，方便和程序或服务端的签名信息核对，验证签名是否一致；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5 = CryptoJS.MD5(md5String).toString();</span><br></pre></td></tr></table></figure>\n\n<p>6、输出md5签名信息并记录日志；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5 digest----&gt;&quot; + md5);</span><br></pre></td></tr></table></figure>\n\n<p>7、通过postman内置的函数将以上签名结果设置为变量，名称为apising，在body的选项卡中将value值设置为｛｛apising｝｝即可，在调用调试接口前会自动执行脚本命令并获取到变量值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm.environment.set(&quot;apising&quot;, md5);</span><br></pre></td></tr></table></figure>\n\n<p><strong>签名示例二：</strong></p>\n<p>输入license和Site Message，点击“next”；</p>\n<p>Body选项卡：</p>\n<p>Body选项卡内可以是任意格式的参数；</p>\n<p>Pre-request Script选项卡：</p>\n<img src=\"https://s2.loli.net/2022/06/25/9zUwdeso5XP4axl.png\" alt=\"image003\" style=\"zoom:80%;\" />\n\n<p>1、声明参数、签名密钥等，可以把需要都单独声明一下；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var number = var &quot;415233197335409695&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">signKey = &quot;415233197335409695&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure>\n\n<p>2、var md5String声明了需要签名的信息包含哪些参数以及信息方式和顺序；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5String = params.number+</span><br><span class=\"line\"></span><br><span class=\"line\">signKey;</span><br></pre></td></tr></table></figure>\n\n<p>4、定义了输出的信息以及完整的日志，方便分析数据和调试；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5String----&gt;&quot; + md5String);</span><br></pre></td></tr></table></figure>\n\n<p>5、声明了md5信息并转换为字符串，方便和程序或服务端的签名信息核对，验证签名是否一致；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5 = CryptoJS.MD5(md5String).toString();</span><br></pre></td></tr></table></figure>\n\n<p>6、输出md5签名信息并记录日志；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5 digest----&gt;&quot; + md5);</span><br></pre></td></tr></table></figure>\n\n<p>7、通过postman内置的函数将以上签名结果设置为变量，名称为ytjdata，在body的选项卡中将value值设置为｛｛ytjdata｝｝即可，在调用调试接口前会自动执行脚本命令并获取到变量值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm.environment.set(&quot;ytjdata&quot;, md5);</span><br></pre></td></tr></table></figure>\n\n<p>以上两种情况包含了自动获取签名参数和自定义需要签名的参数，也可以通过脚本命令实现一些其他的特殊参数、变量等。</p>\n<hr>\n<h2 id=\"欢迎关注公众号收藏小程序\"><a href=\"#欢迎关注公众号收藏小程序\" class=\"headerlink\" title=\"欢迎关注公众号收藏小程序\"></a><center>欢迎关注公众号收藏小程序</center></h2><p><img src=\"https://s2.loli.net/2022/06/23/bYdtKDC2U5J7iWr.jpg\" alt=\"河洛先生\"><img src=\"https://s2.loli.net/2022/06/23/PlUgz5KSHm7OBke.jpg\" alt=\"河洛先生\"></p>\n","more":"<p>3、var md5String声明了需要签名的信息包含哪些参数以及信息方式和顺序；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5String = params.cmd +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.account +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.nonce +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.client +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.timestamp +</span><br><span class=\"line\"></span><br><span class=\"line\">  params.data +</span><br><span class=\"line\"></span><br><span class=\"line\">  signKey;</span><br></pre></td></tr></table></figure>\n\n<p>4、定义了输出的信息以及完整的日志，方便分析数据和调试；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5String----&gt;&quot; + md5String);</span><br></pre></td></tr></table></figure>\n\n<p>5、声明了md5信息并转换为字符串，方便和程序或服务端的签名信息核对，验证签名是否一致；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5 = CryptoJS.MD5(md5String).toString();</span><br></pre></td></tr></table></figure>\n\n<p>6、输出md5签名信息并记录日志；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5 digest----&gt;&quot; + md5);</span><br></pre></td></tr></table></figure>\n\n<p>7、通过postman内置的函数将以上签名结果设置为变量，名称为apising，在body的选项卡中将value值设置为｛｛apising｝｝即可，在调用调试接口前会自动执行脚本命令并获取到变量值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm.environment.set(&quot;apising&quot;, md5);</span><br></pre></td></tr></table></figure>\n\n<p><strong>签名示例二：</strong></p>\n<p>输入license和Site Message，点击“next”；</p>\n<p>Body选项卡：</p>\n<p>Body选项卡内可以是任意格式的参数；</p>\n<p>Pre-request Script选项卡：</p>\n<img src=\"https://s2.loli.net/2022/06/25/9zUwdeso5XP4axl.png\" alt=\"image003\" style=\"zoom:80%;\" />\n\n<p>1、声明参数、签名密钥等，可以把需要都单独声明一下；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var number = var &quot;415233197335409695&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">signKey = &quot;415233197335409695&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">……</span><br></pre></td></tr></table></figure>\n\n<p>2、var md5String声明了需要签名的信息包含哪些参数以及信息方式和顺序；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5String = params.number+</span><br><span class=\"line\"></span><br><span class=\"line\">signKey;</span><br></pre></td></tr></table></figure>\n\n<p>4、定义了输出的信息以及完整的日志，方便分析数据和调试；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5String----&gt;&quot; + md5String);</span><br></pre></td></tr></table></figure>\n\n<p>5、声明了md5信息并转换为字符串，方便和程序或服务端的签名信息核对，验证签名是否一致；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var md5 = CryptoJS.MD5(md5String).toString();</span><br></pre></td></tr></table></figure>\n\n<p>6、输出md5签名信息并记录日志；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(&quot;md5 digest----&gt;&quot; + md5);</span><br></pre></td></tr></table></figure>\n\n<p>7、通过postman内置的函数将以上签名结果设置为变量，名称为ytjdata，在body的选项卡中将value值设置为｛｛ytjdata｝｝即可，在调用调试接口前会自动执行脚本命令并获取到变量值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm.environment.set(&quot;ytjdata&quot;, md5);</span><br></pre></td></tr></table></figure>\n\n<p>以上两种情况包含了自动获取签名参数和自定义需要签名的参数，也可以通过脚本命令实现一些其他的特殊参数、变量等。</p>\n<hr>\n<h2 id=\"欢迎关注公众号收藏小程序\"><a href=\"#欢迎关注公众号收藏小程序\" class=\"headerlink\" title=\"欢迎关注公众号收藏小程序\"></a><center>欢迎关注公众号收藏小程序</center></h2><p><img src=\"https://s2.loli.net/2022/06/23/bYdtKDC2U5J7iWr.jpg\" alt=\"河洛先生\"><img src=\"https://s2.loli.net/2022/06/23/PlUgz5KSHm7OBke.jpg\" alt=\"河洛先生\"></p>","categories":[{"name":"Windows","path":"api/categories/Windows.json"}],"tags":[{"name":"Postman","path":"api/tags/Postman.json"}]}