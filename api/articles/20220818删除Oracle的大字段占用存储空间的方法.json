{"title":"删除Oracle的大字段占用存储空间的方法","slug":"20220818删除Oracle的大字段占用存储空间的方法","date":"2022-08-11T14:18:12.000Z","updated":"2022-10-29T06:58:02.581Z","comments":true,"path":"api/articles/20220818删除Oracle的大字段占用存储空间的方法.json","excerpt":null,"covers":["https://s2.loli.net/2022/06/24/68pVkWZSHcPBzxv.jpg","https://s2.loli.net/2022/08/18/xZCGqe415WErbOA.png","https://s3.bmp.ovh/imgs/2022/08/18/dc4ddc39fcdb4fdb.png","https://s3.bmp.ovh/imgs/2022/08/18/1b71179097616afa.png","https://s2.loli.net/2022/06/23/bYdtKDC2U5J7iWr.jpg"],"content":"<p>Oracle数据库中图片或者包含二进制字段的那些大表，发现有类似SYS_LOB00000**2$$这些信息占用大量存储空间，在测试数据库或者不重要的临时表中，可以删除并释放存储空间</p>\n<img src=\"https://s2.loli.net/2022/06/24/68pVkWZSHcPBzxv.jpg\" alt=\"image002\" style=\"zoom:80%;\" />\n\n<p>Oracle 数据库中varchar2值为4000，针对 VARCHAR2 满足不了我们的需要时，Oracle就提出了大数据类型LOB( Large Object，大对象)。</p>\n<h3 id=\"Oarcle中的LOB类型：\"><a href=\"#Oarcle中的LOB类型：\" class=\"headerlink\" title=\"Oarcle中的LOB类型：\"></a>Oarcle中的LOB类型：</h3><p>在Oracle中，LOB(Large Object，大型对象)类型的字段现在用得越来越多了。因为这种类型的字段，容量大(最多能容纳4GB的数据)，且一个表中可以有多个这种类型的字段，很灵活，适用于数据量非常大的业务领域(如图像、档案等)。</p>\n<p>LOB类型分为BLOB和CLOB两种：BLOB即二进制大型对象(Binary Large Object)，适用于存贮非文本的字节流数据(如程序、图像、影音等)。</p>\n<p>而CLOB，即字符型大型对象(Character Large Object)，则与字符集相关，适于存贮文本型的数据(如历史档案、大部头著作等)。</p>\n<h3 id=\"查询LOB大字段的命令\"><a href=\"#查询LOB大字段的命令\" class=\"headerlink\" title=\"查询LOB大字段的命令\"></a>查询LOB大字段的命令</h3><p>通过以下命令查询出占用大量空间的字段和存储容量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT SEGMENT_NAME, ROUND(SUM(BYTES / 1024 / 1024 / 1024), 2) G</span><br><span class=\"line\"></span><br><span class=\"line\">  FROM DBA_SEGMENTS</span><br><span class=\"line\"></span><br><span class=\"line\"> WHERE SEGMENT_NAME IN</span><br><span class=\"line\"></span><br><span class=\"line\">       (SELECT TABLE_NAME FROM USER_TAB_COLUMNS WHERE DATA_TYPE = &#x27;CLOB&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"> GROUP BY SEGMENT_NAME</span><br><span class=\"line\"></span><br><span class=\"line\"> ORDER BY 2 DESC;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://s2.loli.net/2022/08/18/xZCGqe415WErbOA.png\" alt=\"123\" style=\"zoom:80%;\" />\n\n<h3 id=\"查询类似SYS-LOB0-2-命令\"><a href=\"#查询类似SYS-LOB0-2-命令\" class=\"headerlink\" title=\"查询类似SYS_LOB0**2$$命令\"></a>查询类似SYS_LOB0**2$$命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT SEGMENT_NAME, ROUND(SUM(BYTES / 1024 / 1024 / 1024), 2) G</span><br><span class=\"line\"></span><br><span class=\"line\">  FROM DBA_SEGMENTS</span><br><span class=\"line\"></span><br><span class=\"line\"> --WHERE SEGMENT_NAME IN</span><br><span class=\"line\"></span><br><span class=\"line\">    --   (SELECT TABLE_NAME FROM USER_TAB_COLUMNS WHERE DATA_TYPE = &#x27;CLOB&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"> GROUP BY SEGMENT_NAME</span><br><span class=\"line\"></span><br><span class=\"line\"> ORDER BY 2 DESC;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/08/18/dc4ddc39fcdb4fdb.png\" style=\"zoom:80%;\" />\n\n<h3 id=\"详细命令命令\"><a href=\"#详细命令命令\" class=\"headerlink\" title=\"详细命令命令\"></a>详细命令命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT B.TABLE_NAME,</span><br><span class=\"line\"></span><br><span class=\"line\">      B.COLUMN_NAME,</span><br><span class=\"line\"></span><br><span class=\"line\">      A.SEGMENT_NAME,</span><br><span class=\"line\"></span><br><span class=\"line\">      a.SEGMENT_TYPE,</span><br><span class=\"line\"></span><br><span class=\"line\">      ROUND(SUM(A.BYTES / 1024 / 1024 / 1024), 2) G</span><br><span class=\"line\"></span><br><span class=\"line\"> FROM DBA_SEGMENTS A</span><br><span class=\"line\"></span><br><span class=\"line\"> LEFT JOIN DBA_LOBS B</span><br><span class=\"line\"></span><br><span class=\"line\">   ON A.OWNER = B.OWNER</span><br><span class=\"line\"></span><br><span class=\"line\">  AND A.SEGMENT_NAME = B.SEGMENT_NAME</span><br><span class=\"line\"></span><br><span class=\"line\">--WHERE B.SEGMENT_NAME = &#x27;SYS_LOB0000026212C00002$$&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">HAVING ROUND(SUM(A.BYTES / 1024 / 1024 / 1024), 2) &gt;1</span><br><span class=\"line\"></span><br><span class=\"line\">GROUP BY B.TABLE_NAME, B.COLUMN_NAME, A.SEGMENT_NAME,a.SEGMENT_TYPE;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/08/18/1b71179097616afa.png\" style=\"zoom:80%;\" />\n\n<p>查询后可以看到T_XQ_MJCRJL表的列KMRLTP,其中大对象单独存放在SYS_LOB0000107679C00016$$段中，LOBSEGMENT保存了lob列的真正数据，会非常大，并且独立于原始表存在。</p>\n<h4 id=\"清理建的lob列的表\"><a href=\"#清理建的lob列的表\" class=\"headerlink\" title=\"清理建的lob列的表\"></a>清理建的lob列的表</h4><p>如果需要清理，可以truncate  T_XQ_MJCRJL表，或者drop不需要的分区。</p>\n<h4 id=\"shrink处理lob列的表\"><a href=\"#shrink处理lob列的表\" class=\"headerlink\" title=\"shrink处理lob列的表\"></a>shrink处理lob列的表</h4><p><strong>生产上如果使用表频繁的DML操作不建议shrink,会卡死，引起严重的业务后果</strong></p>\n<p>比如说在你大量的删除T_XQ_MJCRJL后（高水位没有下降），需要执行收缩，收缩的时候建议在不要在业务高峰期（否则可能引起很大的性能问题）。</p>\n<p>Shrink对应的表语句如下：</p>\n<p>注意：由于在线上，不能进行有表锁的操作，所以我并没有采用这种办法</p>\n<p>alter table TABLE_NAME enable ROW MOVEMENT;–启动行移动功能</p>\n<p>alter table TABLE_NAME shrink space compact; –只整理碎片 不回收空间 </p>\n<p>– 重置高水位，此时不能有DML操作</p>\n<p>alter table TABLE_NAME shrink space; –整理碎片并回收空间，并调整水位线。业务少时执行</p>\n<p>alter table TABLE_NAME disable ROW MOVEMENT;–关闭行移动</p>\n<h3 id=\"LOB建议\"><a href=\"#LOB建议\" class=\"headerlink\" title=\"LOB建议\"></a>LOB建议</h3><p>可能对一般的oracle dba或者其它人员，来说，并不是所有东西都要存入数据库，在设计表结构的时候（叫所谓的建模吧！），就应该考虑是否应该存在大字段，需要满足什么功能，好不好管理，对数据集的性能影响有多大？</p>\n<p>个人不太建议在数据库中使用大对象,可以使用外部表（管理方便，更加的简单粗暴），大对象所对应的表进行DML语句是，需要更大的开销，影响性能；比如，可以考虑做一个文件服务器，把需要的大对象按照一定的格式（如时间格式）存成文件，数据库中存放指定的地址就行，这样可以大大提高性能。</p>\n<p>原文参考：<a href=\"https://www.cnblogs.com/hmwh/p/12380211.html\">Oracle的LOB（CLOB）大字段以及（SYS_LOB***$$）清理 - 翰墨文海 - 博客园 (cnblogs.com)</a></p>\n<hr>\n<h2 id=\"欢迎关注公众号收藏小程序\"><a href=\"#欢迎关注公众号收藏小程序\" class=\"headerlink\" title=\"欢迎关注公众号收藏小程序\"></a><center>欢迎关注公众号收藏小程序</center></h2><p><img src=\"https://s2.loli.net/2022/06/23/bYdtKDC2U5J7iWr.jpg\" alt=\"河洛先生\"><img src=\"https://s2.loli.net/2022/06/23/PlUgz5KSHm7OBke.jpg\" alt=\"河洛先生\"></p>\n","more":"<p>Oracle数据库中图片或者包含二进制字段的那些大表，发现有类似SYS_LOB00000**2$$这些信息占用大量存储空间，在测试数据库或者不重要的临时表中，可以删除并释放存储空间</p>\n<img src=\"https://s2.loli.net/2022/06/24/68pVkWZSHcPBzxv.jpg\" alt=\"image002\" style=\"zoom:80%;\" />\n\n<p>Oracle 数据库中varchar2值为4000，针对 VARCHAR2 满足不了我们的需要时，Oracle就提出了大数据类型LOB( Large Object，大对象)。</p>\n<h3 id=\"Oarcle中的LOB类型：\"><a href=\"#Oarcle中的LOB类型：\" class=\"headerlink\" title=\"Oarcle中的LOB类型：\"></a>Oarcle中的LOB类型：</h3><p>在Oracle中，LOB(Large Object，大型对象)类型的字段现在用得越来越多了。因为这种类型的字段，容量大(最多能容纳4GB的数据)，且一个表中可以有多个这种类型的字段，很灵活，适用于数据量非常大的业务领域(如图像、档案等)。</p>\n<p>LOB类型分为BLOB和CLOB两种：BLOB即二进制大型对象(Binary Large Object)，适用于存贮非文本的字节流数据(如程序、图像、影音等)。</p>\n<p>而CLOB，即字符型大型对象(Character Large Object)，则与字符集相关，适于存贮文本型的数据(如历史档案、大部头著作等)。</p>\n<h3 id=\"查询LOB大字段的命令\"><a href=\"#查询LOB大字段的命令\" class=\"headerlink\" title=\"查询LOB大字段的命令\"></a>查询LOB大字段的命令</h3><p>通过以下命令查询出占用大量空间的字段和存储容量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT SEGMENT_NAME, ROUND(SUM(BYTES / 1024 / 1024 / 1024), 2) G</span><br><span class=\"line\"></span><br><span class=\"line\">  FROM DBA_SEGMENTS</span><br><span class=\"line\"></span><br><span class=\"line\"> WHERE SEGMENT_NAME IN</span><br><span class=\"line\"></span><br><span class=\"line\">       (SELECT TABLE_NAME FROM USER_TAB_COLUMNS WHERE DATA_TYPE = &#x27;CLOB&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"> GROUP BY SEGMENT_NAME</span><br><span class=\"line\"></span><br><span class=\"line\"> ORDER BY 2 DESC;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://s2.loli.net/2022/08/18/xZCGqe415WErbOA.png\" alt=\"123\" style=\"zoom:80%;\" />\n\n<h3 id=\"查询类似SYS-LOB0-2-命令\"><a href=\"#查询类似SYS-LOB0-2-命令\" class=\"headerlink\" title=\"查询类似SYS_LOB0**2$$命令\"></a>查询类似SYS_LOB0**2$$命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT SEGMENT_NAME, ROUND(SUM(BYTES / 1024 / 1024 / 1024), 2) G</span><br><span class=\"line\"></span><br><span class=\"line\">  FROM DBA_SEGMENTS</span><br><span class=\"line\"></span><br><span class=\"line\"> --WHERE SEGMENT_NAME IN</span><br><span class=\"line\"></span><br><span class=\"line\">    --   (SELECT TABLE_NAME FROM USER_TAB_COLUMNS WHERE DATA_TYPE = &#x27;CLOB&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"> GROUP BY SEGMENT_NAME</span><br><span class=\"line\"></span><br><span class=\"line\"> ORDER BY 2 DESC;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/08/18/dc4ddc39fcdb4fdb.png\" style=\"zoom:80%;\" />\n\n<h3 id=\"详细命令命令\"><a href=\"#详细命令命令\" class=\"headerlink\" title=\"详细命令命令\"></a>详细命令命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT B.TABLE_NAME,</span><br><span class=\"line\"></span><br><span class=\"line\">      B.COLUMN_NAME,</span><br><span class=\"line\"></span><br><span class=\"line\">      A.SEGMENT_NAME,</span><br><span class=\"line\"></span><br><span class=\"line\">      a.SEGMENT_TYPE,</span><br><span class=\"line\"></span><br><span class=\"line\">      ROUND(SUM(A.BYTES / 1024 / 1024 / 1024), 2) G</span><br><span class=\"line\"></span><br><span class=\"line\"> FROM DBA_SEGMENTS A</span><br><span class=\"line\"></span><br><span class=\"line\"> LEFT JOIN DBA_LOBS B</span><br><span class=\"line\"></span><br><span class=\"line\">   ON A.OWNER = B.OWNER</span><br><span class=\"line\"></span><br><span class=\"line\">  AND A.SEGMENT_NAME = B.SEGMENT_NAME</span><br><span class=\"line\"></span><br><span class=\"line\">--WHERE B.SEGMENT_NAME = &#x27;SYS_LOB0000026212C00002$$&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">HAVING ROUND(SUM(A.BYTES / 1024 / 1024 / 1024), 2) &gt;1</span><br><span class=\"line\"></span><br><span class=\"line\">GROUP BY B.TABLE_NAME, B.COLUMN_NAME, A.SEGMENT_NAME,a.SEGMENT_TYPE;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/08/18/1b71179097616afa.png\" style=\"zoom:80%;\" />\n\n<p>查询后可以看到T_XQ_MJCRJL表的列KMRLTP,其中大对象单独存放在SYS_LOB0000107679C00016$$段中，LOBSEGMENT保存了lob列的真正数据，会非常大，并且独立于原始表存在。</p>\n<h4 id=\"清理建的lob列的表\"><a href=\"#清理建的lob列的表\" class=\"headerlink\" title=\"清理建的lob列的表\"></a>清理建的lob列的表</h4><p>如果需要清理，可以truncate  T_XQ_MJCRJL表，或者drop不需要的分区。</p>\n<h4 id=\"shrink处理lob列的表\"><a href=\"#shrink处理lob列的表\" class=\"headerlink\" title=\"shrink处理lob列的表\"></a>shrink处理lob列的表</h4><p><strong>生产上如果使用表频繁的DML操作不建议shrink,会卡死，引起严重的业务后果</strong></p>\n<p>比如说在你大量的删除T_XQ_MJCRJL后（高水位没有下降），需要执行收缩，收缩的时候建议在不要在业务高峰期（否则可能引起很大的性能问题）。</p>\n<p>Shrink对应的表语句如下：</p>\n<p>注意：由于在线上，不能进行有表锁的操作，所以我并没有采用这种办法</p>\n<p>alter table TABLE_NAME enable ROW MOVEMENT;–启动行移动功能</p>\n<p>alter table TABLE_NAME shrink space compact; –只整理碎片 不回收空间 </p>\n<p>– 重置高水位，此时不能有DML操作</p>\n<p>alter table TABLE_NAME shrink space; –整理碎片并回收空间，并调整水位线。业务少时执行</p>\n<p>alter table TABLE_NAME disable ROW MOVEMENT;–关闭行移动</p>\n<h3 id=\"LOB建议\"><a href=\"#LOB建议\" class=\"headerlink\" title=\"LOB建议\"></a>LOB建议</h3><p>可能对一般的oracle dba或者其它人员，来说，并不是所有东西都要存入数据库，在设计表结构的时候（叫所谓的建模吧！），就应该考虑是否应该存在大字段，需要满足什么功能，好不好管理，对数据集的性能影响有多大？</p>\n<p>个人不太建议在数据库中使用大对象,可以使用外部表（管理方便，更加的简单粗暴），大对象所对应的表进行DML语句是，需要更大的开销，影响性能；比如，可以考虑做一个文件服务器，把需要的大对象按照一定的格式（如时间格式）存成文件，数据库中存放指定的地址就行，这样可以大大提高性能。</p>\n<p>原文参考：<a href=\"https://www.cnblogs.com/hmwh/p/12380211.html\">Oracle的LOB（CLOB）大字段以及（SYS_LOB***$$）清理 - 翰墨文海 - 博客园 (cnblogs.com)</a></p>\n<hr>\n<h2 id=\"欢迎关注公众号收藏小程序\"><a href=\"#欢迎关注公众号收藏小程序\" class=\"headerlink\" title=\"欢迎关注公众号收藏小程序\"></a><center>欢迎关注公众号收藏小程序</center></h2><p><img src=\"https://s2.loli.net/2022/06/23/bYdtKDC2U5J7iWr.jpg\" alt=\"河洛先生\"><img src=\"https://s2.loli.net/2022/06/23/PlUgz5KSHm7OBke.jpg\" alt=\"河洛先生\"></p>\n","categories":[{"name":"Windows","path":"api/categories/Windows.json"}],"tags":[{"name":"Oracle","path":"api/tags/Oracle.json"}]}